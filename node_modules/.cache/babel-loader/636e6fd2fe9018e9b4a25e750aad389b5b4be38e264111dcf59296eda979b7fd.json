{"ast":null,"code":"var _jsxFileName = \"/home/user/phase2/code-challenges/bank-of-flatiron/src/components/TransactionManager.jsx\";\n// TransactionManager.jsx\nimport React, { useState } from 'react';\nimport TransactionForm from './TransactionForm';\nimport Table from './Table'; // Replace 'OtherTable' with the actual name of your other table component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TransactionManager() {\n  const addTransaction = newTransaction => {\n    // Add the new transaction to the transactions array\n    setTransactions(prevTransactions => [...prevTransactions, newTransaction]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TransactionForm, {\n      addTransaction: addTransaction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      transactions: transactions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_c = TransactionManager;\nexport default TransactionManager;\nvar _c;\n$RefreshReg$(_c, \"TransactionManager\");","map":{"version":3,"names":["React","useState","TransactionForm","Table","jsxDEV","_jsxDEV","TransactionManager","addTransaction","newTransaction","setTransactions","prevTransactions","children","fileName","_jsxFileName","lineNumber","columnNumber","transactions","_c","$RefreshReg$"],"sources":["/home/user/phase2/code-challenges/bank-of-flatiron/src/components/TransactionManager.jsx"],"sourcesContent":["// TransactionManager.jsx\nimport React, { useState } from 'react';\nimport TransactionForm from './TransactionForm';\nimport Table from './Table'; // Replace 'OtherTable' with the actual name of your other table component\n\nfunction TransactionManager() {\n   \n  const addTransaction = (newTransaction) => {\n    // Add the new transaction to the transactions array\n    setTransactions(prevTransactions => [...prevTransactions, newTransaction]);\n  };\n\n  return (\n    <div>\n      <TransactionForm addTransaction={addTransaction} />\n      <Table transactions={transactions} />\n    </div>\n  );\n}\n\nexport default TransactionManager;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,KAAK,MAAM,SAAS,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,kBAAkBA,CAAA,EAAG;EAE5B,MAAMC,cAAc,GAAIC,cAAc,IAAK;IACzC;IACAC,eAAe,CAACC,gBAAgB,IAAI,CAAC,GAAGA,gBAAgB,EAAEF,cAAc,CAAC,CAAC;EAC5E,CAAC;EAED,oBACEH,OAAA;IAAAM,QAAA,gBACEN,OAAA,CAACH,eAAe;MAACK,cAAc,EAAEA;IAAe;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnDV,OAAA,CAACF,KAAK;MAACa,YAAY,EAAEA;IAAa;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEV;AAACE,EAAA,GAbQX,kBAAkB;AAe3B,eAAeA,kBAAkB;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}