{"ast":null,"code":"var _jsxFileName = \"/home/user/phase2/code-challenges/bank-of-flatiron/src/components/Row.jsx\";\nimport Form from './components/Form';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Row({\n  bank\n}) {\n  const rows = bank.map((transaction, index) => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: transaction.Date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: transaction.Description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: transaction.Category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: transaction.Amount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, index + 1, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [rows, /*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c = Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["Form","jsxDEV","_jsxDEV","Fragment","_Fragment","Row","bank","rows","map","transaction","index","children","Date","fileName","_jsxFileName","lineNumber","columnNumber","Description","Category","Amount","_c","$RefreshReg$"],"sources":["/home/user/phase2/code-challenges/bank-of-flatiron/src/components/Row.jsx"],"sourcesContent":["import Form from './components/Form';\n\nexport default function Row ({bank}){\n\n    const rows=bank.map((transaction,index)=> {\n        return(\n            <tr key={index+1}>\n        <td>{transaction.Date}</td>\n        <td>{transaction.Description}</td>\n        <td>{transaction.Category}</td>\n        <td>{transaction.Amount}</td>\n        </tr>\n    )\n\n    }\n        )\n    return(\n        <>\n        {rows}\n        <Form/>\n        </>\n    )\n}"],"mappings":";AAAA,OAAOA,IAAI,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErC,eAAe,SAASC,GAAGA,CAAE;EAACC;AAAI,CAAC,EAAC;EAEhC,MAAMC,IAAI,GAACD,IAAI,CAACE,GAAG,CAAC,CAACC,WAAW,EAACC,KAAK,KAAI;IACtC,oBACIR,OAAA;MAAAS,QAAA,gBACJT,OAAA;QAAAS,QAAA,EAAKF,WAAW,CAACG;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC3Bd,OAAA;QAAAS,QAAA,EAAKF,WAAW,CAACQ;MAAW;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAClCd,OAAA;QAAAS,QAAA,EAAKF,WAAW,CAACS;MAAQ;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC/Bd,OAAA;QAAAS,QAAA,EAAKF,WAAW,CAACU;MAAM;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA,GAJhBN,KAAK,GAAC,CAAC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKhB,CAAC;EAGT,CACI,CAAC;EACL,oBACId,OAAA,CAAAE,SAAA;IAAAO,QAAA,GACCJ,IAAI,eACLL,OAAA,CAACF,IAAI;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eACL,CAAC;AAEX;AAACI,EAAA,GApBuBf,GAAG;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}