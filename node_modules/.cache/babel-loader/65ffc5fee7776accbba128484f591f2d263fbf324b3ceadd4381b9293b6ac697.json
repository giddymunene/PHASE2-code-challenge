{"ast":null,"code":"var _jsxFileName = \"/home/user/PHASE2-code-challenge/code-challenges/bank-of-flatiron/src/components/Row.jsx\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Row({\n  arr\n}) {\n  const rows = arr.map((transaction, index) => {\n    return /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: transaction.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 6,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: transaction.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 7,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: transaction.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: transaction.amount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 5,\n        columnNumber: 17\n      }, this)\n    }, index + 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: rows\n  }, void 0, false);\n}\n_c = Row;\nexport default Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["Row","arr","rows","map","transaction","index","_jsxDEV","children","date","fileName","_jsxFileName","lineNumber","columnNumber","description","category","amount","_Fragment","_c","$RefreshReg$"],"sources":["/home/user/PHASE2-code-challenge/code-challenges/bank-of-flatiron/src/components/Row.jsx"],"sourcesContent":["function Row({arr}){\n    const rows = arr.map((transaction, index) => {\n        return (\n            <tbody key={index + 1}>\n                <tr >\n                    <td>{transaction.date}</td>\n                    <td>{transaction.description}</td>\n                    <td>{transaction.category}</td>\n                    <td>{transaction.amount}</td>\n                </tr>\n            </tbody>\n\n        )\n\n    }\n    )\n    return (\n        <>\n            {rows}\n\n        </>)\n}\nexport default Row;"],"mappings":";;AAAA,SAASA,GAAGA,CAAC;EAACC;AAAG,CAAC,EAAC;EACf,MAAMC,IAAI,GAAGD,GAAG,CAACE,GAAG,CAAC,CAACC,WAAW,EAAEC,KAAK,KAAK;IACzC,oBACIC,OAAA;MAAAC,QAAA,eACID,OAAA;QAAAC,QAAA,gBACID,OAAA;UAAAC,QAAA,EAAKH,WAAW,CAACI;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC3BN,OAAA;UAAAC,QAAA,EAAKH,WAAW,CAACS;QAAW;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAClCN,OAAA;UAAAC,QAAA,EAAKH,WAAW,CAACU;QAAQ;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC/BN,OAAA;UAAAC,QAAA,EAAKH,WAAW,CAACW;QAAM;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B;IAAC,GANGP,KAAK,GAAG,CAAC;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOd,CAAC;EAIhB,CACA,CAAC;EACD,oBACIN,OAAA,CAAAU,SAAA;IAAAT,QAAA,EACKL;EAAI,gBAEP,CAAC;AACX;AAACe,EAAA,GArBQjB,GAAG;AAsBZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}